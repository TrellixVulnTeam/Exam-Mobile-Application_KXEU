package com.yorbax.EMA.admin.activity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.AdapterView;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.android.material.button.MaterialButton;import com.google.android.material.textfield.TextInputEditText;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.auth.UserProfileChangeRequest;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import com.yorbax.EMA.R;import com.yorbax.EMA.admin.adapter.CustomAdapter;import com.yorbax.EMA.admin.model.CourseModel;import com.yorbax.EMA.admin.model.LectureModel;import java.util.ArrayList;import java.util.List;import static com.yorbax.EMA.Constants.Constants.mAuth;import static com.yorbax.EMA.Constants.Constants.mDatabase;public class AddLecture extends AppCompatActivity {    public String activityStatus;    TextInputEditText edEmail, edPass, edPass2, edUsername, ed_name;    MaterialButton btnSave;    Spinner txt_spinner;    TextView txt_1;    DatabaseReference databaseReference;    String courseName, courseId;    LectureModel lectureModel;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_add_lecture);        activityStatus = getIntent().getStringExtra("activity");        init();        listerners();        if (activityStatus.equals("update")) {            txt_1.setText("Update Lecturer");            btnSave.setText("Update");            lectureModel = (LectureModel) getIntent().getExtras().getSerializable("updateData");            edUsername.setText(lectureModel.username);            ed_name.setText(lectureModel.name);            edPass.setText(lectureModel.password);            edPass2.setText(lectureModel.password);            edEmail.setText(lectureModel.email);        } else {            txt_1.setText("Add New  Lecturer");            btnSave.setText("Save");        }        databaseReference = mDatabase;    }    private void init() {        ed_name = findViewById(R.id.txt_name);        edEmail = findViewById(R.id.txt_email);        edPass = findViewById(R.id.txt_pass);        txt_1 = findViewById(R.id.txt_1);        edPass2 = findViewById(R.id.txt_pass_2);        txt_spinner = findViewById(R.id.txt_spinner);        edUsername = findViewById(R.id.txt_username);        btnSave = findViewById(R.id.btnSave);        fetchData();    }    void listerners() {        btnSave.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (edUsername.getText().toString().equals("")) {                    edUsername.setError("Required!");                    return;                }                if (edEmail.getText().toString().equals("")) {                    edEmail.setError("Required!");                    return;                }                if (edPass.getText().toString().equals("")) {                    edPass.setError("Required!");                    return;                }                if (edPass2.getText().toString().equals("")) {                    edPass2.setError("Required!");                    return;                }                if (courseName.equals("Select Course")) {                    Toast.makeText(AddLecture.this, "Please select course", Toast.LENGTH_SHORT).show();                    return;                }                if (edPass.getText().toString().equals(edPass2.getText().toString())) {                    if (activityStatus.equals("update")) {                        updateLecturer();                    } else {                        //                code here for insert data                        AddLecturer();                    }//                  code here for insert                } else {                    Toast.makeText(AddLecture.this, "Password must match!", Toast.LENGTH_SHORT).show();                }            }        });    }    private void AddLecturer() {        LectureModel courseModel = new LectureModel(null,                ed_name.getText().toString(),                courseName, courseId,                edUsername.getText().toString(),                edEmail.getText().toString(),                edPass.getText().toString(),                2);        mAuth.createUserWithEmailAndPassword(edEmail.getText().toString(), edPass.getText().toString())                .addOnCompleteListener(this, task -> {                    if (task.isSuccessful()) {                        FirebaseUser user = mAuth.getCurrentUser();                        UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()                                .setDisplayName(edUsername.getText().toString())                                .build();                        user.updateProfile(profileUpdates)                                .addOnCompleteListener(task1 -> {                                    if (task1.isSuccessful()) {                                        databaseReference.child("users").child(user.getUid()).setValue(courseModel).addOnCompleteListener(new OnCompleteListener<Void>() {                                            @Override                                            public void onComplete(@NonNull Task<Void> task) {                                                if (task.isSuccessful()) {                                                    Toast.makeText(AddLecture.this, "Lecturer Created Successfully!", Toast.LENGTH_SHORT).show();                                                    finish();                                                } else {                                                    Toast.makeText(AddLecture.this, "Something goes wrong please try again", Toast.LENGTH_SHORT).show();                                                }                                            }                                        });                                    } else {                                        Toast.makeText(this, "An Error Occurred!", Toast.LENGTH_SHORT).show();                                    }                                });                    } else {                        // If sign in fails, display a message to the user.                        Log.e("rss", task.getException().getMessage());                        Toast.makeText(AddLecture.this, task.getException().getMessage(),                                Toast.LENGTH_SHORT).show();                    }                });    }    private void updateLecturer() {        LectureModel courseModel1 = new LectureModel(null,                ed_name.getText().toString(),                courseName, courseId,                edUsername.getText().toString(),                edEmail.getText().toString(),                edPass.getText().toString(),                2);        databaseReference.child("users").child(lectureModel.id).setValue(courseModel1).addOnCompleteListener(new OnCompleteListener<Void>() {            @Override            public void onComplete(@NonNull Task<Void> task) {                if (task.isSuccessful()) {                    Toast.makeText(AddLecture.this, "Lecturer Updated Successfully!", Toast.LENGTH_SHORT).show();                    finish();                } else {                    Toast.makeText(AddLecture.this, "Something goes wrong please try again", Toast.LENGTH_SHORT).show();                }            }        });    }    private void fetchData() {        List<CourseModel> courseList = new ArrayList<>();        FirebaseDatabase.getInstance().getReference().child("course").addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot snapshot) {                courseList.add(new CourseModel("", "Select Course", ""));                for (DataSnapshot snapshot1 : snapshot.getChildren()) {                    String id = snapshot1.getKey();                    String courseName = snapshot1.child("courseName").getValue(String.class);                    String creditHr = snapshot1.child("creditHr").getValue(String.class);                    courseList.add(new CourseModel(id, courseName, creditHr));                }                CustomAdapter customAdapter = new CustomAdapter(getApplicationContext(), courseList);                txt_spinner.setAdapter(customAdapter);                txt_spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {                    @Override                    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {                        courseId = courseList.get(i).id;                        courseName = courseList.get(i).courseName;                    }                    @Override                    public void onNothingSelected(AdapterView<?> adapterView) {                    }                });            }            @Override            public void onCancelled(@NonNull DatabaseError error) {                Toast.makeText(AddLecture.this, error.getMessage(), Toast.LENGTH_SHORT).show();            }        });    }}